# Courier
- type: entity
  id: LockerCourier
  parent: LockerBaseSecure
  name: courier's locker
  components:
  - type: Sprite
    sprite: _Impstation/Structures/Storage/couriercloset.rsi
    noRot: true
    layers:
    - state: courier
      map: ["enum.StorageVisualLayers.Base"]
    - state: courier_door
      map: ["enum.StorageVisualLayers.Door"]
    - state: locked
      map: ["enum.LockVisualLayers.Lock"]
      shader: unshaded
    - state: welded
      visible: false
      map: ["enum.WeldableLayers.BaseWelded"]
    - state: paper
      visible: false
      sprite: Structures/Storage/closet_labels.rsi
      offset: "-0.065,0"
      map: ["enum.PaperLabelVisuals.Layer"]
  - type: EntityStorageVisuals
    stateBaseClosed: courier
    stateDoorOpen: courier_open
    stateDoorClosed: courier_door
  - type: AccessReader
    access: [["Courier"]]

# HD
- type: entity
  id: LockerHospitalityDirector
  parent: LockerBaseSecure
  name: hospitality director's locker
  components:
  - type: Appearance
  - type: Sprite
    sprite: _Impstation/Structures/Storage/hdcloset.rsi
    noRot: true
    layers:
    - state: hd
      map: ["enum.StorageVisualLayers.Base"]
    - state: hd_door
      map: ["enum.StorageVisualLayers.Door"]
    - state: locked
      map: ["enum.LockVisualLayers.Lock"]
      shader: unshaded
    - state: welded
      visible: false
      map: ["enum.WeldableLayers.BaseWelded"]
    - state: paper
      visible: false
      sprite: Structures/Storage/closet_labels.rsi
      offset: "-0.065,0"
      map: ["enum.PaperLabelVisuals.Layer"]
  - type: EntityStorageVisuals
    stateBaseClosed: hd
    stateDoorOpen: hd_open
    stateDoorClosed: hd_door
  - type: AccessReader
    access: [["HospitalityDirector"]]

# Musician
- type: entity
  id: LockerMusician
  parent: LockerBaseSecure
  name: musician locker
  components:
  - type: Appearance
  - type: Sprite
    sprite: _Impstation/Structures/Storage/musiciancloset.rsi
    noRot: true
    layers:
    - state: musician
      map: ["enum.StorageVisualLayers.Base"]
    - state: musician_door
      map: ["enum.StorageVisualLayers.Door"]
    - state: locked
      map: ["enum.LockVisualLayers.Lock"]
      shader: unshaded
    - state: welded
      visible: false
      map: ["enum.WeldableLayers.BaseWelded"]
    - state: paper
      visible: false
      sprite: Structures/Storage/closet_labels.rsi
      offset: "-0.065,0"
      map: ["enum.PaperLabelVisuals.Layer"]
  - type: EntityStorageVisuals
    stateBaseClosed: musician
    stateDoorOpen: musician_open
    stateDoorClosed: musician_door
  - type: AccessReader
    access: [["Musician"]]

# Belongings
- type: entity
  id: LockerBelongings
  parent: LockerSecurity
  name: belongings locker
  description: To safely store detainee and prisoner belongings during their stay. #imp
  components:
  - type: EntityStorageVisuals #imp
    stateBaseClosed: belongings
    stateDoorOpen: sec_open
    stateDoorClosed: belongings_door
  - type: AccessReader
    access: [["Security"]]

# Griffy
- type: entity
  id: LockerGriffy
  parent: LockerBaseSecure
  name: griffy suit locker
  description: A standard-issue Nanotrasen mascot storage unit.
  components:
  - type: Sprite
    sprite: _Impstation/Structures/Storage/closet.rsi
    noRot: true
    layers:
    - state: sec_griffy
      map: ["enum.StorageVisualLayers.Base"]
    - state: sec_griffy_door
      map: ["enum.StorageVisualLayers.Door"]
    - state: locked
      map: ["enum.LockVisualLayers.Lock"]
      shader: unshaded
    - state: welded
      visible: false
      map: ["enum.WeldableLayers.BaseWelded"]
    - state: paper
      visible: false
      sprite: Structures/Storage/closet_labels.rsi
      offset: "-0.065,0"
      map: ["enum.PaperLabelVisuals.Layer"]
  - type: EntityStorageVisuals
    stateBaseClosed: sec_griffy
    stateDoorOpen: sec_open
    stateDoorClosed: sec_griffy_door
  - type: AccessReader
    access: [["Security"]]
