- type: entity
  id: Incorporeal
  save: false
  abstract: true
  description: Mobs without physical bodies
  components:
  - type: Sprite
    noRot: true
    overrideContainerOcclusion: true # Always show up regardless of where they're contained.
    drawdepth: Ghosts
  - type: FTLSmashImmune
  - type: CargoSellBlacklist
  - type: MovementSpeedModifier
    baseSprintSpeed: 12
    baseWalkSpeed: 8
  - type: MovementIgnoreGravity
  - type: Physics
    bodyType: KinematicController
    bodyStatus: InAir
  - type: CanMoveInAir
  - type: Fixtures
    fixtures:
      fix1:
        shape:
          !type:PhysShapeCircle
          radius: 0.35
        density: 15
        layer:
        - GhostImpassable

# shared parent between aghosts, replay spectators and normal observers
- type: entity
  parent:
  - Incorporeal
  - BaseMob
  id: MobObserverBase
  abstract: true
  name: observer
  description: Boo!
  categories: [ HideSpawnMenu ]
  components:
  - type: Sprite
    sprite: Mobs/Ghosts/ghost_human.rsi
    color: "#fff8"
    layers:
    - state: animated
      shader: unshaded
  - type: ContentEye
    maxZoom: 1.44,1.44
  - type: Eye
    drawFov: false
  - type: Input
    context: "ghost"
  - type: Examiner
    skipChecks: true
  - type: Ghost
  - type: GhostHearing
  - type: ShowElectrocutionHUD
  - type: IntrinsicRadioReceiver
  - type: ActiveRadio
    receiveAllChannels: true
    globalReceive: true
  - type: Tag
    tags:
    - BypassInteractionRangeChecks
  - type: PointLight
    radius: 6
    castShadows: false
    enabled: false

# proto for player ghosts specifically
- type: entity
  parent: MobObserverBase
  id: MobObserver
  components:
  - type: Spectral
  - type: SolutionScanner
  - type: Tag
    tags:
    - AllowGhostShownByEvent
  - type: UserInterface # imp - add mass scanner console. might need to remove this if it becomes a performance issue.
    interfaces:
      enum.RadarConsoleUiKey.Key:
        type: RadarConsoleBoundUserInterface
  - type: IntrinsicUI # imp. ditto
    uis:
      enum.RadarConsoleUiKey.Key:
        toggleAction: ActionGhostShowRadar
  - type: RadarConsole # imp. ditto
    followEntity: true
  - type: IgnoreUIRange # imp. pretty much all this does is make it so that ghosts can see IDs and health info at any range, since ghosts don't have hands or complexinteract

# imp - ActionAghostShowRadar except with CheckCanInteract set to false, and a UseDelay 
- type: entity
  id: ActionGhostShowRadar
  name: Mass Scanner Interface
  description: View a Mass Scanner Interface.
  components:
  - type: InstantAction
    checkCanInteract: false
    icon: { sprite: Interface/Actions/actions_ai.rsi, state: mass_scanner }
    iconOn: Interface/Actions/actions_ai.rsi/mass_scanner.png
    keywords: [ "AI", "console", "interface" ]
    priority: -6
    event: !type:ToggleIntrinsicUIEvent { key: enum.RadarConsoleUiKey.Key }
    useDelay: 60 # to discourage everyone from opening it at once and causing potential perf issues.

- type: entity
  id: ActionGhostBoo
  name: Boo!
  description: Scare your crew members because of boredom!
  components:
  - type: InstantAction
    icon: Interface/Actions/scream.png
    checkCanInteract: false
    event: !type:BooActionEvent
    startDelay: true
    useDelay: 120

- type: entity
  id: ActionToggleLighting
  name: Toggle Lighting
  description: Toggle light rendering to better observe dark areas.
  components:
  - type: InstantAction
    icon: Interface/VerbIcons/light.svg.192dpi.png
    clientExclusive: true
    checkCanInteract: false
    event: !type:ToggleLightingActionEvent

- type: entity
  id: ActionToggleFov
  name: Toggle FoV
  description: Toggles field-of-view in order to see what players see.
  components:
  - type: InstantAction
    icon: Interface/VerbIcons/vv.svg.192dpi.png
    clientExclusive: true
    checkCanInteract: false
    event: !type:ToggleFoVActionEvent

- type: entity
  id: ActionToggleGhosts
  name: Toggle Ghosts
  description: Toggle the visibility of other ghosts.
  components:
  - type: InstantAction
    icon: { sprite: Mobs/Ghosts/ghost_human.rsi, state: icon }
    clientExclusive: true
    checkCanInteract: false
    event: !type:ToggleGhostsActionEvent

- type: entity
  id: ActionToggleGhostHearing
  name: Toggle Ghost Hearing
  description: Toggle between hearing all messages and hearing only radio & nearby messages.
  components:
  - type: InstantAction
    checkCanInteract: false
    icon:
      sprite: Clothing/Ears/Headsets/base.rsi
      state: icon
    iconOn: Interface/Actions/ghostHearingToggled.png
    event: !type:ToggleGhostHearingActionEvent
